version: '2.1'

# {json:scada} Docker Compilation for Linux x64 - (c) 2020 - Ricardo L. Olsen 
# Requires Internet connection!

services:

    
  dotnet_compile:
    image: mcr.microsoft.com/dotnet/sdk:5.0
    #image: mcr.microsoft.com/dotnet/core/sdk:3.1
    container_name: js_dotnet_compile
    command: sh -c "cd /src/lib60870.netcore/lib60870.netcore/ && 
                    dotnet build --runtime linux-x64 -c Release -o /publish_bin/ &&
                    cd /src/lib60870.netcore/iec101client/ &&
                    dotnet publish --runtime linux-x64 -p:PublishReadyToRun=true -c Release -o /publish_bin/ &&
                    cd /src/lib60870.netcore/iec101server/ &&
                    dotnet publish --runtime linux-x64 -p:PublishReadyToRun=true -c Release -o /publish_bin/ &&
                    cd /src/lib60870.netcore/iec104client/ &&
                    dotnet publish --runtime linux-x64 -p:PublishReadyToRun=true -c Release -o /publish_bin/ &&
                    cd /src/lib60870.netcore/iec104server/ &&
                    dotnet publish --runtime linux-x64 -p:PublishReadyToRun=true -c Release -o /publish_bin/ &&
                    cd /src/dnp3/Dnp3Client/ && 
                    dotnet publish --runtime linux-x64 -p:PublishReadyToRun=true -c Release -o /publish_bin/ &&
                    cd /src/libplctag/libplctag.NET/src/libplctag &&
                    dotnet build --runtime linux-x64 -c Release -o /publish_bin/ &&
                    cd /src/libplctag/PLCTagsClient &&
                    dotnet publish --runtime linux-x64 -p:PublishReadyToRun=true -c Release -o /publish_bin/"
    environment:
      - DOTNET_CLI_TELEMETRY_OPTOUT=1
    #command: tail -f /dev/null
    volumes:
      - ../src/lib60870.netcore:/src/lib60870.netcore
      - ../src/dnp3:/src/dnp3
      - ../src/libplctag:/src/libplctag
      - ../demo-docker/bin:/publish_bin
 
  calculations_compile:
    image: golang:alpine
    container_name: js_calculations_compile
    command: sh -c "apk add --no-cache git && 
                    cd /go/src/calculations/ && 
                    go get ./... && 
                    go build && 
                    cp calculations /publish_bin/"
    volumes:
      - ../src/calculations:/go/src/calculations
      - ../demo-docker/bin:/publish_bin

  i104m_compile:
    image: golang:alpine
    container_name: js_i104m_compile
    command: sh -c "apk add --no-cache git && 
                    cd /go/src/i104m/ &&
                    go get ./... && 
                    go build && 
                    cp i104m /publish_bin/"
    volumes:
      - ../src/i104m:/go/src/i104m
      - ../demo-docker/bin:/publish_bin

  cs_data_processor_update:
    image: node:current-alpine3.12
    container_name: js_cs_data_processor_update
    command:  sh -c "cd /cs_data_processor && npm update"
    volumes:
      - ../src/cs_data_processor:/cs_data_processor

  server_realtime_update:
    image: node:current-alpine3.12
    container_name: js_server_realtime_update
    command:  sh -c "cd /server_realtime && npm update"
    volumes:
      - ../src/server_realtime:/server_realtime

  server_realtime_auth_update:
    image: node:current-alpine3.12
    container_name: js_server_realtime_auth_update
    command:  sh -c "cd /server_realtime_auth && npm update"
    volumes:
      - ../src/server_realtime_auth:/server_realtime_auth

  htdocs_admin_update:
    image: node:current-alpine3.12
    container_name: js_htdocs_admin_update
    command:  sh -c "cd /htdocs-admin && npm update && npm run build"
    volumes:
      - ../src/htdocs-admin:/htdocs-admin

  alarm_beep_update:
    image: node:current-alpine3.12
    container_name: js_alarm_beep_update
    command:  sh -c "cd /alarm_beep && npm update"
    volumes:
      - ../src/alarm_beep:/alarm_beep

  oshmi2json_update:
    image: node:current-alpine3.12
    container_name: js_oshmi2json_update
    command:  sh -c "cd /oshmi2json && npm update"
    volumes:
      - ../src/oshmi2json:/oshmi2json
